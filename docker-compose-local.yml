version: '3.4'

services:

    web:
        image: ${WEB_CONTAINER_IMAGE:-api-mmpi/web}
        container_name: ${WEB_CONTAINER_NAME:-api-mmpi-web}
        build:
            context: docker/web
            args:
                timezone: ${APP_TIMEZONE}
                php_config: php-local.ini
        ports:
            - ${WEB_CONTAINER_SSH_PORT:-22}:22
            - ${WEB_CONTAINER_HTTP_PORT:-80}:80
            - ${WEB_CONTAINER_HTTPS_PORT:-443}:443
        volumes:
            - ${WEB_CONTAINER_VOLUME}:/var/www/html
        environment:
            APACHE_RUN_USER: enterprise
            XDEBUG_CONFIG: remote_host=host.docker.internal
                           remote_port=9000
                           remote_enable=On
                           remote_autostart=On
            PHP_IDE_CONFIG: serverName=${XDEBUG_SERVER_NAME}
        depends_on:
            - mysql
            - elasticsearch
        working_dir: /var/www/html
        healthcheck:
            test: ["CMD", "pgrep", "apache2"]
            interval: 5s
            timeout: 10s
            retries: 10
            start_period: 15s

    scheduler:
        image: ${WEB_CONTAINER_IMAGE:-api-mmpi/web}
        container_name: ${WEB_CONTAINER_NAME:-api-mmpi-web}-scheduler
        volumes:
            - ${WEB_CONTAINER_VOLUME}:/var/www/html
        environment:
            CONTAINER_ROLE: scheduler
        depends_on:
            - web
        healthcheck:
            test: ["CMD", "pgrep", "-f", "sleep 60"]
            interval: 60s
            timeout: 10s
            retries: 10
            start_period: 15s

    queue:
        image: ${WEB_CONTAINER_IMAGE:-api-mmpi/web}
        container_name: ${WEB_CONTAINER_NAME:-api-mmpi-web}-queue
        volumes:
            - ${WEB_CONTAINER_VOLUME}:/var/www/html
        environment:
            CONTAINER_ROLE: queue
        depends_on:
            - web
        healthcheck:
            test: ["CMD", "pgrep", "-f", "php artisan queue:work"]
            interval: 1m
            timeout: 10s
            retries: 10
            start_period: 15s

    mysql:
        image: ${DB_CONTAINER_IMAGE:-api-mmpi/db}
        container_name: ${DB_CONTAINER_NAME:-api-mmpi-db}
        build:
            context: docker/mysql
            args:
                timezone: ${APP_TIMEZONE}
        environment:
            MYSQL_DATABASE: mmpi
            MYSQL_USER: mmpi
            MYSQL_PASSWORD: ipmm
            MYSQL_ALLOW_EMPTY_PASSWORD: "true"
            MYSQL_ROOT_HOST: "%"
        volumes:
            - mysql:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-hlocalhost", "-uroot", "-p"]
            interval: 5s
            timeout: 10s
            retries: 10
            start_period: 15s

    elasticsearch:
        image: ${ELASTIC_CONTAINER_IMAGE:-api-mmpi/elastic}
        container_name: ${ELASTIC_CONTAINER_NAME:-api-mmpi-elastic}
        build:
            context: docker/elasticsearch
            args:
                timezone: ${APP_TIMEZONE}
        volumes:
            - elasticsearch:/usr/share/elasticsearch/data
        environment:
            TZ: ${APP_TIMEZONE}
            discovery.type: single-node

    kibana:
        image: ${KIBANA_CONTAINER_IMAGE:-api-mmpi/kibana}
        container_name: ${KIBANA_CONTAINER_NAME:-api-mmpi-kibana}
        build: docker/kibana
        ports:
            - ${KIBANA_CONTAINER_WEB_PORT:-5601}:5601

volumes:
    mysql:
    elasticsearch:
