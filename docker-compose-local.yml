version: '3.4'

services:

    apache:
        image: ${APACHE_CONTAINER_IMAGE}
        container_name: ${APACHE_CONTAINER_NAME}
        build: docker/apache
        ports:
            - ${APACHE_CONTAINER_HTTP_PORT}:80
            - ${APACHE_CONTAINER_HTTPS_PORT}:443
        volumes:
            - ${APACHE_CONTAINER_VOLUME}:/var/www/html
        depends_on:
            - php

    php:
        image: ${PHP_CONTAINER_IMAGE}
        container_name: ${PHP_CONTAINER_NAME}
        build:
            context: docker/php
            args:
                display_errors: ${PHP_DISPLAY_ERRORS:-1}
        ports:
            - ${APACHE_CONTAINER_SSH_PORT}:22
        volumes:
            - ${APACHE_CONTAINER_VOLUME}:/var/www/html
        depends_on:
            - mysql
        environment:
            XDEBUG_CONFIG: remote_host=${XDEBUG_REMOTE_HOST:-host.docker.internal}
                remote_port=9000
                remote_enable=On
                remote_autostart=On
            PHP_IDE_CONFIG: serverName=${XDEBUG_SERVER_NAME}

    scheduler:
        image: ${PHP_CONTAINER_IMAGE}
        container_name: ${PHP_CONTAINER_NAME}-scheduler
        volumes:
            - ${APACHE_CONTAINER_VOLUME}:/var/www/html
        environment:
            CONTAINER_ROLE: scheduler
        depends_on:
            - php

    queue:
        image: ${PHP_CONTAINER_IMAGE}
        container_name: ${PHP_CONTAINER_NAME}-queue
        volumes:
            - ${APACHE_CONTAINER_VOLUME}:/var/www/html
            - ${APACHE_CONTAINER_VOLUME}/config/supervisor:/etc/supervisor
        environment:
            CONTAINER_ROLE: supervisor
        depends_on:
            - php

    mysql:
        image: ${MYSQL_CONTAINER_IMAGE}
        container_name: ${MYSQL_CONTAINER_NAME}
        build: docker/mysql
        ports:
            - ${MYSQL_CONTAINER_PORT}:3306
        environment:
            MYSQL_DATABASE: mmpi
            MYSQL_USER: mmpi
            MYSQL_PASSWORD: ipmm
            MYSQL_ALLOW_EMPTY_PASSWORD: "true"
            MYSQL_ROOT_HOST: "%"
        volumes:
            - ${MYSQL_CONTAINER_VOLUME}:/var/lib/mysql

    elasticsearch:
        image: ${ELASTIC_CONTAINER_IMAGE}
        container_name: ${ELASTIC_CONTAINER_NAME}
        build: docker/elasticsearch
        volumes:
            - ${ELASTIC_CONTAINER_VOLUME}:/usr/share/elasticsearch/data

    kibana:
        image: ${KIBANA_CONTAINER_IMAGE}
        container_name: ${KIBANA_CONTAINER_NAME}
        build: docker/kibana
        ports:
            - ${KIBANA_CONTAINER_HTTP_PORT}:5601
        environment:
            ELASTICSEARCH_USERNAME: ${KIBANA_ELASTICSEARCH_USERNAME}
            ELASTICSEARCH_PASSWORD: ${KIBANA_ELASTICSEARCH_PASSWORD}
