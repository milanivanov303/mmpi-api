version: '3.3'

services:

    web:
        image: ${WEB_CONTAINER_IMAGE:-api-mmpi/web}
        container_name: ${WEB_CONTAINER_NAME:-api-mmpi-web}
        build: docker/web
        ports:
            - ${WEB_CONTAINER_IP}:${WEB_CONTAINER_SSH_PORT:-22}:22
            - ${WEB_CONTAINER_IP}:${WEB_CONTAINER_HTTP_PORT:-80}:80
            - ${WEB_CONTAINER_IP}:${WEB_CONTAINER_HTTPS_PORT:-443}:443
        volumes:
            - ${WEB_CONTAINER_VOLUME:-./}:/var/www/html
        environment:
            XDEBUG_CONFIG: remote_host=host.docker.internal
                           remote_port=9000
                           remote_enable=On
                           remote_autostart=On
            PHP_IDE_CONFIG: serverName=${XDEBUG_SERVER_NAME}
        depends_on:
            - mysql
        working_dir: /var/www/html
        networks:
            - local

    scheduler:
        image: ${WEB_CONTAINER_IMAGE:-api-mmpi/web}
        container_name: ${WEB_CONTAINER_NAME:-api-mmpi-web}-scheduler
        volumes:
            - ${WEB_CONTAINER_VOLUME:-./}:/var/www/html
        environment:
            CONTAINER_ROLE: scheduler
        depends_on:
            - web
        networks:
            - local

    queue:
        image: ${WEB_CONTAINER_IMAGE:-api-mmpi/web}
        container_name: ${WEB_CONTAINER_NAME:-api-mmpi-web}-queue
        volumes:
            - ${WEB_CONTAINER_VOLUME:-./}:/var/www/html
        environment:
            CONTAINER_ROLE: queue
        depends_on:
            - web
        networks:
            - local

    mysql:
        image: ${DB_CONTAINER_IMAGE:-api-mmpi/db}
        container_name: ${DB_CONTAINER_NAME:-api-mmpi-db}
        build: docker/mysql
        environment:
            - MYSQL_DATABASE=mmpi
            - MYSQL_USER=mmpi
            - MYSQL_PASSWORD=ipmm
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_ROOT_HOST=%
        volumes:
            - mysql:/var/lib/mysql
        networks:
            - local

    elastic:
        image: ${ELASTIC_CONTAINER_IMAGE:-api-mmpi/elastic}
        container_name: ${ELASTIC_CONTAINER_NAME:-api-mmpi-elastic}
        build: docker/elasticsearch
        volumes:
            - elasticsearch:/usr/share/elasticsearch/data
        networks:
            - local

volumes:
    mysql:
    elasticsearch:

networks:
    local:
        driver: bridge
